1) HTTP é um protocolo baseado em streams de texto. Muito resumidamente, o cliente abre um socket para falar com o servidor e, nesse socket, envia requisições (REQUEST), as quais o servidor responderá com respostas (RESPONSE).
Existem diferentes métodos para enviar requisições HTTP. Os mais comuns são GET, POST, PUT e DELETE. E em alguns desses métodos é possível enviar dados para consulta ou até mesmo para persistência em banco de dados. Basta que o método tenha suporte à BODY REQUESTS. E em alguns casos a requisição precisa atender algumas exigências do servidor para ser devidamente processada. Para isso, contamos com a ajuda do HTTP HEADERS.
2) O status code 301 indica que houve um redirecionamento permanente. Do momento A para o momento B em tempo de execução. O status code 302 indica que houve um redirecionamento temporário durante a execução. 
Em alguns navegadores mais recentes, o 302 é retornado quando uma requisição inválida com método GET é executada através do método POST. 

3) O Composer é uma ferramenta para o gerenciamento de dependências em PHP. Ele permite que você declare as bibliotecas que seu projeto necessita e ele gerencia, instala ou atualiza os pacotes indicados.
4) Bom eu poderia mencionar apenas o Laravel, que atualmente é o framework mais solicitado pela comunidade php. Pelo seu grande poder de escalabilidade e grande quantidade da sua comunidade no universo PHP. Mas gostaria de mencionar também o CakePHP. Que ainda resiste como uma ótima solução para pequenos projetos, soluções que exigem clean code e pouco tempo de desenvolvimento. E Que também é uma ótima escolha para projetos de escalabilidade. Porém, com uma comunidade e documentações não tão robustas assim em comparação com o Laravel. 
5) o git é um sistema para controle de versão distribuído. Criado pelo pai do Linux, Linus Torvalds. 
6) Github, Gitlab, Bitbucket, Azure DevOps e alguns outros serviços concorrentes.
7 - A) Comando para alternar branchs ou restaurar arquivos da árvore de trabalho.B) Junta dois ou mais commits de código em um determinado ramo do repositório.C) Comando que organiza uma lista de alterações ou correções na estrutura original de um repositório, mantendo salvo como nova versão a estrutura atual de um projeto.D) Comando utilizado para adicionar novos arquivos à estrutura de versionamento do repositório. Sem esse comando apenas as alterações em arquivos já versionados serão aceitas em um próximo commit.